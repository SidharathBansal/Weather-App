{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["api","App","useState","query","setQuery","weather","setWeather","className","main","temp","type","placeholder","onChange","e","target","value","onKeyPress","evt","key","fetch","then","res","json","result","console","log","name","sys","country","date","String","window","Date","slice","dateBuilder","Math","round","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2JAEMA,EACC,mCADDA,EAEE,2CAuEOC,MApEf,WACE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAsBA,OACE,mCACE,qBACEC,UACyB,oBAAhBF,EAAQG,MACXH,EAAQG,KAAKC,KAAO,GAClB,WAEF,MANR,SASE,iCACE,qBAAKF,UAAU,aAAf,SACE,uBACEG,KAAK,OACLH,UAAU,aACVI,YAAY,YACZC,SAAU,SAACC,GAAD,OAAOT,EAASS,EAAEC,OAAOC,QACnCA,MAAOZ,EACPa,WA/BG,SAACC,GACE,UAAZA,EAAIC,KACNC,MAAM,GAAD,OAAInB,EAAJ,qBAAyBG,EAAzB,+BAAqDH,IACvDoB,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLnB,EAAS,IACTE,EAAWiB,GACXC,QAAQC,IAAIF,WA2BY,oBAAhBlB,EAAQG,KACd,gCACE,sBAAKD,UAAU,eAAf,UACE,sBAAKA,UAAU,WAAf,UACGF,EAAQqB,KADX,KACmBrB,EAAQsB,IAAIC,WAE/B,qBAAKrB,UAAU,OAAf,SAhDM,WAElB,IAAIsB,EAAOC,OAAO,IAAIC,OAAOC,MAG7B,OAFAH,EAAOA,EAAKI,MAAM,EAAG,IA6CcC,QAEzB,sBAAK3B,UAAU,cAAf,UACE,sBAAKA,UAAU,OAAf,UAAuB4B,KAAKC,MAAM/B,EAAQG,KAAKC,MAA/C,WACA,qBAAKF,UAAU,UAAf,SAA0BF,EAAQA,QAAQ,GAAGG,aAIjD,WCvDG6B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,K","file":"static/js/main.c063e19d.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nconst api = {\n  key: \"f83d080361831a5c804a162e21e161f4\",\n  base: \"https://api.openweathermap.org/data/2.5/\",\n};\n\nfunction App() {\n  const [query, setQuery] = useState(\"\");\n  const [weather, setWeather] = useState({});\n\n  const dateBuilder = () => {\n    \n    let date = String(new window.Date());\n    date = date.slice(0, 15);\n\n    return date;\n  };\n\n  const search = (evt) => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=metric&APPID=${api.key}`)\n        .then((res) => res.json())\n        .then((result) => {\n          setQuery(\"\");\n          setWeather(result);\n          console.log(result);\n        });\n    }\n  };\n\n  return (\n    <>\n      <div\n        className={\n          typeof weather.main != \"undefined\"\n            ? weather.main.temp > 16\n              ? \"app warm\"\n              : \"app\"\n            : \"app\"\n        }\n      >\n        <main>\n          <div className=\"search-box\">\n            <input\n              type=\"text\"\n              className=\"search-bar\"\n              placeholder=\"Search...\"\n              onChange={(e) => setQuery(e.target.value)}\n              value={query}\n              onKeyPress={search}\n            />\n          </div>\n          {typeof weather.main != \"undefined\" ? (\n            <div>\n              <div className=\"location-box\">\n                <div className=\"location\">\n                  {weather.name}, {weather.sys.country}\n                </div>\n                <div className=\"date\">{dateBuilder()}</div>\n              </div>\n              <div className=\"weather-box\">\n                <div className=\"temp\">{Math.round(weather.main.temp)}Â°c</div>\n                <div className=\"weather\">{weather.weather[0].main}</div>\n              </div>\n            </div>\n          ) : (\n            \"\"\n          )}\n        </main>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}